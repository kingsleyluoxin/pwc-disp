layer {
	name: "image_disparity_train"
	type: "CustomData"
	top: "img0"
	top: "img1"
	top: "disp_gt"
	include {
		phase: TRAIN
	}
	data_param {
	source: "/home/Working/data/FlyingThingsLMDB"
	batch_size: $BATCH_SIZE_TRAIN
	backend: LMDB
	rand_permute: true
	rand_permute_seed: 77
	slice_point: 3
	slice_point: 6
	encoding: UINT8
	encoding: UINT8
	encoding: UINT16FLOW
	verbose: true
  }
} # Get Img0, Img1, Disp from LMDB

layer {
	name: "image_disparity_test"
	type: "CustomData"
	top: "img0"
	top: "img1"
	top: "disp_gt"
	include {
		phase: TEST
	}
	data_param {
	source: "/home/Working/data/FlyingThingsTestLMDB"
	batch_size: $BATCH_SIZE_TEST
	backend: LMDB
	rand_permute: true
	rand_permute_seed: 77
	slice_point: 3
	slice_point: 6
	encoding: UINT8
	encoding: UINT8
	encoding: UINT16FLOW
	verbose: true
  }
} # Get Img0, Img1, Disp from LMDB

layer {
	name: "img0_subtract"
	type: "Eltwise"
	bottom: "img0"
	top: "img0_subtract"
	eltwise_param {
		operation: SUM
		coeff: 0.00392156862745
	}
} # Scale Img0

layer {
	name: "img1_subtract"
	type: "Eltwise"
	bottom: "img1"
	top: "img1_subtract"
	eltwise_param {
		operation: SUM
		coeff: 0.00392156862745
	}
} # Scale Img1

layer {
	name: "img0_aug"
	type: "DataAugmentation"
	bottom: "img0_subtract"
	top: "img0_aug"
	top: "img0_aug_params"
	propagate_down: false
	augmentation_param {
		max_multiplier: 1
		augment_during_test: false
		recompute_mean: 1000
		mean_per_pixel: false
		translate {
			rand_type: "uniform_bernoulli"
			exp: false
			mean: 0
			spread: 0.4
			prob: 1.0
		}
		zoom {
			rand_type: "uniform_bernoulli"
			exp: true
			mean: 0.2
			spread: 0.4
			prob: 1.0
		}
		squeeze {
			rand_type: "uniform_bernoulli"
			exp: true
			mean: 0
			spread: 0.3
			prob: 1.0
		}
		lmult_pow {
			rand_type: "uniform_bernoulli"
			exp: true
			mean: -0.2
			spread: 0.4
			prob: 1.0
		}
		lmult_mult {
			rand_type: "uniform_bernoulli"
			exp: true
			mean: 0.0
			spread: 0.4
			prob: 1.0
		}
		lmult_add {
			rand_type: "uniform_bernoulli"
			exp: false
			mean: 0
			spread: 0.03
			prob: 1.0
		}
		sat_pow {
			rand_type: "uniform_bernoulli"
			exp: true
			mean: 0
			spread: 0.4
			prob: 1.0
		}
		sat_mult {
			rand_type: "uniform_bernoulli"
			exp: true
			mean: -0.3
			spread: 0.5
			prob: 1.0
		}
		sat_add {
			rand_type: "uniform_bernoulli"
			exp: false
			mean: 0
			spread: 0.03
			prob: 1.0
		}
		col_pow {
			rand_type: "gaussian_bernoulli"
			exp: true
			mean: 0
			spread: 0.4
			prob: 1.0
		}
		col_mult {
			rand_type: "gaussian_bernoulli"
			exp: true
			mean: 0
			spread: 0.2
			prob: 1.0
		}
		col_add {
			rand_type: "gaussian_bernoulli"
			exp: false
			mean: 0
			spread: 0.02
			prob: 1.0
		}
		ladd_pow {
			rand_type: "gaussian_bernoulli"
			exp: true
			mean: 0
			spread: 0.4
			prob: 1.0
		}
		ladd_mult {
			rand_type: "gaussian_bernoulli"
			exp: true
			mean: 0.0
			spread: 0.4
			prob: 1.0
		}
		ladd_add {
			rand_type: "gaussian_bernoulli"
			exp: false
			mean: 0
			spread: 0.04
			prob: 1.0
		}
		col_rotate {
			rand_type: "uniform_bernoulli"
			exp: false
			mean: 0
			spread: 1
			prob: 1.0
		}
		crop_width: $CROP_WIDTH
		crop_height: $CROP_HEIGHT
		chromatic_eigvec: 0.51
		chromatic_eigvec: 0.56
		chromatic_eigvec: 0.65
		chromatic_eigvec: 0.79
		chromatic_eigvec: 0.01
		chromatic_eigvec: -0.62
		chromatic_eigvec: 0.35
		chromatic_eigvec: -0.83
		chromatic_eigvec: 0.44
		noise {
			rand_type: "uniform_bernoulli"
			exp: false
			mean: 0.03
			spread: 0.03
			prob: 1.0
		}
	}
} # Augment Img0

layer {
	name: "GenerateAugmentationParameters1"
	type: "GenerateAugmentationParameters"
	bottom: "img0_aug_params"
	bottom: "img0_subtract"
	bottom: "img0_aug"
	top: "GenerateAugmentationParameters1"
	augmentation_param {
		gamma {
      rand_type: "gaussian_bernoulli"
      exp: true
      mean: 0
      spread: 0.01
      prob: 1.0
    }
    brightness {
      rand_type: "gaussian_bernoulli"
      exp: false
      mean: 0
      spread: 0.01
      prob: 1.0
    }
    contrast {
      rand_type: "gaussian_bernoulli"
      exp: true
      mean: 0
      spread: 0.01
      prob: 1.0
    }
    color {
      rand_type: "gaussian_bernoulli"
      exp: true
      mean: 0
      spread: 0.01
      prob: 1.0
    }
  }
  coeff_schedule_param {
    half_life: 50000
    initial_coeff: 0.5
    final_coeff: 1
  }
} # Get Params Img0

layer {
	name: "img1_aug"
	type: "DataAugmentation"
	bottom: "img1_subtract"
	bottom: "GenerateAugmentationParameters1"
	top: "img1_aug"
	propagate_down: false
	propagate_down: false
	augmentation_param {
		max_multiplier: 1
		augment_during_test: false
		recompute_mean: 1000
		mean_per_pixel: false
		crop_width: $CROP_WIDTH
		crop_height: $CROP_HEIGHT
		chromatic_eigvec: 0.51
		chromatic_eigvec: 0.56
		chromatic_eigvec: 0.65
		chromatic_eigvec: 0.79
		chromatic_eigvec: 0.01
		chromatic_eigvec: -0.62
		chromatic_eigvec: 0.35
		chromatic_eigvec: -0.83
		chromatic_eigvec: 0.44
	}
} # Augment Img1

layer {
  name: "DummyDisp_train"
  type: "DummyData"
  top: "dummy_disp"
  include {
    phase: TRAIN
  }
  dummy_data_param {
    data_filler {
      type: "constant"
      value: 0
    }
    num: $BATCH_SIZE_TRAIN
    channels: 1
    height: $INPUT_HEIGHT
    width: $INPUT_WIDTH
  }
}

layer {
  name: "DummyDisp_test"
  type: "DummyData"
  top: "dummy_disp"
  include {
    phase: TEST
  }
  dummy_data_param {
    data_filler {
      type: "constant"
      value: 0
    }
    num: $BATCH_SIZE_TEST
    channels: 1
    height: $INPUT_HEIGHT
    width: $INPUT_WIDTH
  }
}

layer {
	name: "concat_disp"
	type: "Concat"
	bottom: "disp_gt"
	bottom: "dummy_disp"
	top: "concat_disp"
	concat_param {
		concat_dim: 1  
	} 
	propagate_down: false
	propagate_down: false
}

layer {
	name: "disp_gt_augment"
	type: "FlowAugmentation"
	bottom: "concat_disp"
	bottom: "img0_aug_params"
	bottom: "GenerateAugmentationParameters1"
	top: "disp_gt_augment"
	augmentation_param {
		crop_width: $CROP_WIDTH
		crop_height: $CROP_HEIGHT
	}
} # Augment Disp

# layer {
# 	name: "scaled_disp_gt"
# 	type: "Eltwise"
# 	bottom: "disp_gt_aug"
# 	top: "scaled_disp_gt"
# 	eltwise_param {
# 		operation: SUM
# 		coeff: 0.05
# 	}
# } # Scale Disp

layer {
	name: "Slice_disp"
	type: "Slice"
	bottom: "disp_gt_augment"
	top: "disp_gt_aug"
	top: "disp_slice"  
	slice_param {
		slice_point: 1
		axis: 1
	}  
	propagate_down: false
}

################# Start Of Conv 1 #################
layer {
	name: "conv0_1_a"
	type: "Convolution"
	bottom: "img0_aug"
	bottom: "img1_aug"
	top: "conv0_1_a"
	top: "conv1_1_a"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 16
		pad: 1
		kernel_size: 3
		stride: 2
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Conv1 

layer {
	name: "Relu0_1_a"
	type: "ReLU"
	bottom: "conv0_1_a"
	top: "conv0_1_a"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv0_1

layer {
	name: "Relu1_1_a"
	type: "ReLU"
	bottom: "conv1_1_a"
	top: "conv1_1_a"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv1_1

# layer {
#	name: "conv0_1_aa"
#	type: "Convolution"
#	bottom: "conv0_1_a"
#	bottom: "conv1_1_a"
#	top: "conv0_1_aa"
#	top: "conv1_1_aa"
#	param {
#		lr_mult: 1
#		decay_mult: 1
#	}
#	param {
#		lr_mult: 1
#		decay_mult: 0
#	}
#	convolution_param {
#		num_output: 16
#		pad: 1
#		kernel_size: 3
#		stride: 1
#		weight_filler {
#			type: "msra"
#		}
#		bias_filler {
#			type: "constant"
#		}
#		engine: CUDNN
#	}
# }

# layer {
#	name: "Relu0_1_aa"
#	type: "ReLU"
#	bottom: "conv0_1_aa"
#	top: "conv0_1_aa"
#	relu_param {
#		negative_slope: 0.1
#	}
# }

# layer {
#	name: "Relu1_1_aa"
#	type: "ReLU"
#	bottom: "conv1_1_aa"
#	top: "conv1_1_aa"
#	relu_param {
#		negative_slope: 0.1
#	}
#}

layer {
	name: "conv0_1_b"
	type: "Convolution"
	bottom: "conv0_1_a"
	bottom: "conv1_1_a"
	top: "conv0_1_b"
	top: "conv1_1_b"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 16
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Conv1_1

layer {
	name: "Relu0_1_b"
	type: "ReLU"
	bottom: "conv0_1_b"
	top: "conv0_1_b"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv0_11

layer {
	name: "Relu1_1_b"
	type: "ReLU"
	bottom: "conv1_1_b"
	top: "conv1_1_b"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv1_11
################## End Of Conv 1 ##################

################# Start Of Conv 2 #################
layer {
	name: "conv0_2_a"
	type: "Convolution"
	bottom: "conv0_1_b"
	bottom: "conv1_1_b"
	top: "conv0_2_a"
	top: "conv1_2_a"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 32
		pad: 1
		kernel_size: 3
		stride: 2
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Conv2

layer {
	name: "Relu0_2_a"
	type: "ReLU"
	bottom: "conv0_2_a"
	top: "conv0_2_a"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv0_2

layer {
	name: "Relu1_2_a"
	type: "ReLU"
	bottom: "conv1_2_a"
	top: "conv1_2_a"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv1_2

layer {
	name: "conv0_2_aa"
	type: "Convolution"
	bottom: "conv0_2_a"
	bottom: "conv1_2_a"
	top: "conv0_2_aa"
	top: "conv1_2_aa"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 32
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Conv2_1

layer {
	name: "Relu0_2_aa"
	type: "ReLU"
	bottom: "conv0_2_aa"
	top: "conv0_2_aa"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv0_21

layer {
	name: "Relu1_2_aa"
	type: "ReLU"
	bottom: "conv1_2_aa"
	top: "conv1_2_aa"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv1_21

layer {
	name: "conv0_2_b"
	type: "Convolution"
	bottom: "conv0_2_aa"
	bottom: "conv1_2_aa"
	top: "conv0_2_b"
	top: "conv1_2_b"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 32
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Conv2_2

layer {
	name: "Relu0_2_b"
	type: "ReLU"
	bottom: "conv0_2_b"
	top: "conv0_2_b"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv0_22

layer {
	name: "Relu1_2_b"
	type: "ReLU"
	bottom: "conv1_2_b"
	top: "conv1_2_b"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv1_22
################## End Of Conv 2 ##################

################# Start Of Conv 3 #################
layer {
	name: "conv0_3_a"
	type: "Convolution"
	bottom: "conv0_2_b"
	bottom: "conv1_2_b"
	top: "conv0_3_a"
	top: "conv1_3_a"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 64
		pad: 1
		kernel_size: 3
		stride: 2
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Conv3

layer {
	name: "Relu0_3_a"
	type: "ReLU"
	bottom: "conv0_3_a"
	top: "conv0_3_a"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv0_3

layer {
	name: "Relu1_3_a"
	type: "ReLU"
	bottom: "conv1_3_a"
	top: "conv1_3_a"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv1_3

layer {
	name: "conv0_3_aa"
	type: "Convolution"
	bottom: "conv0_3_a"
	bottom: "conv1_3_a"
	top: "conv0_3_aa"
	top: "conv1_3_aa"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 64
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Conv3_1

layer {
	name: "Relu0_3_aa"
	type: "ReLU"
	bottom: "conv0_3_aa"
	top: "conv0_3_aa"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv0_31

layer {
	name: "Relu1_3_aa"
	type: "ReLU"
	bottom: "conv1_3_aa"
	top: "conv1_3_aa"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv1_31

layer {
	name: "conv0_3_b"
	type: "Convolution"
	bottom: "conv0_3_aa"
	bottom: "conv1_3_aa"
	top: "conv0_3_b"
	top: "conv1_3_b"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 64
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Conv3_2

layer {
	name: "Relu0_3_b"
	type: "ReLU"
	bottom: "conv0_3_b"
	top: "conv0_3_b"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv0_32

layer {
	name: "Relu1_3_b"
	type: "ReLU"
	bottom: "conv1_3_b"
	top: "conv1_3_b"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv1_32
################## End Of Conv 3 ##################

################# Start Of Conv 4 #################
layer {
	name: "conv0_4_a"
	type: "Convolution"
	bottom: "conv0_3_b"
	bottom: "conv1_3_b"
	top: "conv0_4_a"
	top: "conv1_4_a"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 96
		pad: 1
		kernel_size: 3
		stride: 2
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Conv4

layer {
	name: "Relu0_4_a"
	type: "ReLU"
	bottom: "conv0_4_a"
	top: "conv0_4_a"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv0_4

layer {
	name: "Relu1_4_a"
	type: "ReLU"
	bottom: "conv1_4_a"
	top: "conv1_4_a"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv1_4

layer {
	name: "conv0_4_aa"
	type: "Convolution"
	bottom: "conv0_4_a"
	bottom: "conv1_4_a"
	top: "conv0_4_aa"
	top: "conv1_4_aa"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 96
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Conv4_1

layer {
	name: "Relu0_4_aa"
	type: "ReLU"
	bottom: "conv0_4_aa"
	top: "conv0_4_aa"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv0_41

layer {
	name: "Relu1_4_aa"
	type: "ReLU"
	bottom: "conv1_4_aa"
	top: "conv1_4_aa"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv1_41

layer {
	name: "conv0_4_b"
	type: "Convolution"
	bottom: "conv0_4_aa"
	bottom: "conv1_4_aa"
	top: "conv0_4_b"
	top: "conv1_4_b"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 96
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Conv4_2

layer {
	name: "Relu0_4_b"
	type: "ReLU"
	bottom: "conv0_4_b"
	top: "conv0_4_b"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv0_42

layer {
	name: "Relu1_4_b"
	type: "ReLU"
	bottom: "conv1_4_b"
	top: "conv1_4_b"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv1_42
################## End Of Conv 4 ##################

################# Start Of Conv 5 #################
layer {
	name: "conv0_5_a"
	type: "Convolution"
	bottom: "conv0_4_b"
	bottom: "conv1_4_b"
	top: "conv0_5_a"
	top: "conv1_5_a"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 128
		pad: 1
		kernel_size: 3
		stride: 2
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Conv5

layer {
	name: "Relu0_5_a"
	type: "ReLU"
	bottom: "conv0_5_a"
	top: "conv0_5_a"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv0_5

layer {
	name: "Relu1_5_a"
	type: "ReLU"
	bottom: "conv1_5_a"
	top: "conv1_5_a"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv1_5

layer {
	name: "conv0_5_aa"
	type: "Convolution"
	bottom: "conv0_5_a"
	bottom: "conv1_5_a"
	top: "conv0_5_aa"
	top: "conv1_5_aa"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 128
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Conv5_1

layer {
	name: "Relu0_5_aa"
	type: "ReLU"
	bottom: "conv0_5_aa"
	top: "conv0_5_aa"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv0_51

layer {
	name: "Relu1_5_aa"
	type: "ReLU"
	bottom: "conv1_5_aa"
	top: "conv1_5_aa"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv1_51

layer {
	name: "conv0_5_b"
	type: "Convolution"
	bottom: "conv0_5_aa"
	bottom: "conv1_5_aa"
	top: "conv0_5_b"
	top: "conv1_5_b"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 128
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Conv5_2

layer {
	name: "Relu0_5_b"
	type: "ReLU"
	bottom: "conv0_5_b"
	top: "conv0_5_b"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv0_52

layer {
	name: "Relu1_5_b"
	type: "ReLU"
	bottom: "conv1_5_b"
	top: "conv1_5_b"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv1_52
################## End Of Conv 5 ##################

################# Start Of Conv 6 #################
layer {
	name: "Convolution1"
	type: "Convolution"
	bottom: "conv0_5_b"
	bottom: "conv1_5_b"
	top: "Convolution1"
	top: "Convolution2"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 196
		pad: 1
		kernel_size: 3
		stride: 2
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Convolution

layer {
	name: "conv0_6_a"
	type: "Convolution"
	bottom: "Convolution1"
	bottom: "Convolution2"
	top: "conv0_6_a"
	top: "conv1_6_a"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 196
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Conv6_1

layer {
	name: "Relu0_6_a"
	type: "ReLU"
	bottom: "conv0_6_a"
	top: "conv0_6_a"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv0_61

layer {
	name: "Relu1_6_a"
	type: "ReLU"
	bottom: "conv1_6_a"
	top: "conv1_6_a"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv1_61

layer {
	name: "conv0_6_b"
	type: "Convolution"
	bottom: "conv0_6_a"
	bottom: "conv1_6_a"
	top: "conv0_6_b"
	top: "conv1_6_b"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 196
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Conv6_2

layer {
	name: "Relu0_6_b"
	type: "ReLU"
	bottom: "conv0_6_b"
	top: "conv0_6_b"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv0_62

layer {
	name: "Relu1_6_b"
	type: "ReLU"
	bottom: "conv1_6_b"
	top: "conv1_6_b"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv1_62
################## End Of Conv 6 ##################

################ Start of Warp 6 ##################
layer {
	name: "Correlation1"
	type: "Correlation1D"
	bottom: "conv0_6_b"
	bottom: "conv1_6_b"
	top: "Correlation1"
	correlation_param {
		pad: 4
		kernel_size: 1
		max_displacement: 4
		# single_direction: -1
		stride_1: 1
		stride_2: 1
	}
} # Corr 

# layer {
# 	name: "corr6"
# 	type: "ReLU"
# 	bottom: "Correlation1"
# 	top: "Correlation1"
# 	relu_param {
# 		negative_slope: 0.1
# 	}
# } # Relu corr

layer {
	name: "conv6_0"
	type: "Convolution"
	bottom: "Correlation1"
	top: "conv6_0"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 128
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Conv6_0 (corr)

layer {
	name: "relu6_0"
	type: "ReLU"
	bottom: "conv6_0"
	top: "conv6_0"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv6_0

layer {
	name: "denseconcat6_0"
	type: "Concat"
	bottom: "conv6_0"
	bottom: "Correlation1"
	top: "denseconcat6_0"
	concat_param {
		axis: 1
	}
} # Concat1 conv6_0 & corr

layer {
	name: "conv6_1"
	type: "Convolution"
	bottom: "denseconcat6_0"
	top: "conv6_1"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 128
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Conv6_1 (concat1)

layer {
	name: "relu6_1"
	type: "ReLU"
	bottom: "conv6_1"
	top: "conv6_1"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv6_1

layer {
	name: "denseconcat6_1"
	type: "Concat"
	bottom: "conv6_1"
	bottom: "denseconcat6_0"
	top: "denseconcat6_1"
	concat_param {
		axis: 1
	}
} # Concat2 concat1 & Conv6_1

layer {
	name: "conv6_2"
	type: "Convolution"
	bottom: "denseconcat6_1"
	top: "conv6_2"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 96
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Conv6_2 (concat2)

layer {
	name: "relu6_2"
	type: "ReLU"
	bottom: "conv6_2"
	top: "conv6_2"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv6_2

layer {
	name: "denseconcat6_2"
	type: "Concat"
	bottom: "conv6_2"
	bottom: "denseconcat6_1"
	top: "denseconcat6_2"
	concat_param {
		axis: 1
	}
} # Concat3 concat2 & Conv6_2

layer {
	name: "conv6_3"
	type: "Convolution"
	bottom: "denseconcat6_2"
	top: "conv6_3"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 64
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Conv6_3 (concat2)

layer {
	name: "relu6_3"
	type: "ReLU"
	bottom: "conv6_3"
	top: "conv6_3"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv6_3

layer {
	name: "denseconcat6_3"
	type: "Concat"
	bottom: "conv6_3"
	bottom: "denseconcat6_2"
	top: "denseconcat6_3"
	concat_param {
		axis: 1
	}
} # Concat4 concat3 & Conv6_3

layer {
	name: "conv6_4"
	type: "Convolution"
	bottom: "denseconcat6_3"
	top: "conv6_4"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 32
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Conv6_4 (concat3)

layer {
	name: "relu6_4"
	type: "ReLU"
	bottom: "conv6_4"
	top: "conv6_4"
	relu_param {
		negative_slope: 0.1
	}
} # Relu conv6_4

layer {
	name: "denseconcat6_4"
	type: "Concat"
	bottom: "conv6_4"
	bottom: "denseconcat6_3"
	top: "denseconcat6_4"
	concat_param {
		axis: 1
	}
} # Concat5 concat4 & Conv6_4

layer {
	name: "predict_disp6"
	type: "Convolution"
	bottom: "denseconcat6_4"
	top: "predict_disp6"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 1
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Predict Disp 6

layer {
	name: "upsample_flow_6to5"
	type: "Deconvolution"
	bottom: "predict_disp6"
	top: "upsample_flow_6to5"
	param {
		lr_mult: 1
		decay_mult: 0
	}
	param {
		lr_mult: 0
		decay_mult: 0
	}
	convolution_param {
		num_output: 1
		pad: 1
		kernel_size: 4
		stride: 2
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # upsample_flow_6to5

layer {
	name: "upsample_feature_6to5"
	type: "Deconvolution"
	bottom: "denseconcat6_4"
	top: "upsample_feature_6to5"
	param {
		lr_mult: 1
		decay_mult: 0
	}
	param {
		lr_mult: 0
		decay_mult: 0
	}
	convolution_param {
		num_output: 4
		pad: 1
		kernel_size: 4
		stride: 2
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # upsample_feature_6to5

layer {
	name: "scale_flow_6to5"
	type: "Eltwise"
	bottom: "upsample_flow_6to5"
	top: "scale_flow_6to5"
	eltwise_param {
		operation: SUM
		coeff: 0.03125
	}
} # scale_flow_6to5
################# End of Warp 6 ###################

################ Start of Warp 5 ##################
layer {
	name: "zero_flow_6to5"
	type: "Eltwise"
	bottom: "scale_flow_6to5"
	top: "zero_flow_6to5"  
	eltwise_param {
		operation: SUM
		coeff: 0
	}
}

layer {
	name: "cat_flow_6to5"
	type: "Concat"
	bottom: "scale_flow_6to5"
	bottom: "zero_flow_6to5"
	top: "cat_flow_6to5"
}

layer {
	name: "warped_image5"
	type: "FlowWarp"
	bottom: "conv1_5_b"
	bottom: "cat_flow_6to5"
	top: "warped_image5"
	propagate_down: true
	propagate_down: false

} # Warp 5

layer {
	name: "Correlation2"
	type: "Correlation1D"
	bottom: "conv0_5_b"
	bottom: "warped_image5"
	top: "Correlation2"
	correlation_param {
		pad: 4
		kernel_size: 1
		max_displacement: 4
		# single_direction: -1
		stride_1: 1
		stride_2: 1
	}
} # corr

# layer {
# 	name: "corr5"
# 	type: "ReLU"
# 	bottom: "Correlation2"
# 	top: "Correlation2"
# 	relu_param {
# 		negative_slope: 0.1
# 	}
# } # Relu corr

layer {
	name: "concat5"
	type: "Concat"
	bottom: "Correlation2"
	bottom: "conv0_5_b"
	bottom: "upsample_flow_6to5"
	bottom: "upsample_feature_6to5"
	top: "concat5"
	concat_param {
		axis: 1
	}
} # concat0 (corr conv0_52 upsample_flow_6to5 upsample_feature_6to5)

layer {
	name: "conv5_0"
	type: "Convolution"
	bottom: "concat5"
	top: "conv5_0"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 128
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Conv5_0 (concat0)

layer {
	name: "relu5_0"
	type: "ReLU"
	bottom: "conv5_0"
	top: "conv5_0"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv5_0

layer {
	name: "denseconcat5_0"
	type: "Concat"
	bottom: "conv5_0"
	bottom: "concat5"
	top: "denseconcat5_0"
	concat_param {
		axis: 1
	}
} # Concat1 concat0 & Conv5_0

layer {
	name: "conv5_1"
	type: "Convolution"
	bottom: "denseconcat5_0"
	top: "conv5_1"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 128
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Conv5_1 (concat1)

layer {
	name: "relu5_1"
	type: "ReLU"
	bottom: "conv5_1"
	top: "conv5_1"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv5_1

layer {
	name: "denseconcat5_1"
	type: "Concat"
	bottom: "conv5_1"
	bottom: "denseconcat5_0"
	top: "denseconcat5_1"
	concat_param {
		axis: 1
	}
} # Concat2 concat1 & Conv5_1

layer {
	name: "conv5_2"
	type: "Convolution"
	bottom: "denseconcat5_1"
	top: "conv5_2"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 96
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Conv5_2 (concat2)

layer {
	name: "relu5_2"
	type: "ReLU"
	bottom: "conv5_2"
	top: "conv5_2"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv5_2

layer {
	name: "denseconcat5_2"
	type: "Concat"
	bottom: "conv5_2"
	bottom: "denseconcat5_1"
	top: "denseconcat5_2"
	concat_param {
		axis: 1
	}
} # Concat3 concat2 & Conv5_2

layer {
	name: "conv5_3"
	type: "Convolution"
	bottom: "denseconcat5_2"
	top: "conv5_3"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 64
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Conv5_3 (concat2)

layer {
	name: "relu5_3"
	type: "ReLU"
	bottom: "conv5_3"
	top: "conv5_3"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv5_3

layer {
	name: "denseconcat5_3"
	type: "Concat"
	bottom: "conv5_3"
	bottom: "denseconcat5_2"
	top: "denseconcat5_3"
	concat_param {
		axis: 1
	}
} # Concat4 concat3 & Conv5_3

layer {
	name: "conv5_4"
	type: "Convolution"
	bottom: "denseconcat5_3"
	top: "conv5_4"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 32
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Conv5_4 (concat3)

layer {
	name: "relu5_4"
	type: "ReLU"
	bottom: "conv5_4"
	top: "conv5_4"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv5_4

layer {
	name: "denseconcat5_4"
	type: "Concat"
	bottom: "conv5_4"
	bottom: "denseconcat5_3"
	top: "denseconcat5_4"
	concat_param {
		axis: 1
	}
} # Concat5 concat4 & Conv5_4

layer {
	name: "predict_disp5"
	type: "Convolution"
	bottom: "denseconcat5_4"
	top: "predict_disp5"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 1
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
}  # Predict Disp 5

layer {
	name: "upsample_flow_5to4"
	type: "Deconvolution"
	bottom: "predict_disp5"
	top: "upsample_flow_5to4"
	param {
		lr_mult: 1
		decay_mult: 0
	}
	param {
		lr_mult: 0
		decay_mult: 0
	}
	convolution_param {
		num_output: 1
		pad: 1
		kernel_size: 4
		stride: 2
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # upsample_flow_5to4

layer {
	name: "upsample_feature_5to4"
	type: "Deconvolution"
	bottom: "denseconcat5_4"
	top: "upsample_feature_5to4"
	param {
		lr_mult: 1
		decay_mult: 0
	}
	param {
		lr_mult: 0
		decay_mult: 0
	}
	convolution_param {
		num_output: 4
		pad: 1
		kernel_size: 4
		stride: 2
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # upsample_feature_5to4

layer {
	name: "scale_flow_5to4"
	type: "Eltwise"
	bottom: "upsample_flow_5to4"
	top: "scale_flow_5to4"
	eltwise_param {
		operation: SUM
		coeff: 0.0625
	}
} # scale_flow_5to4
################# End of Warp 5 ###################

################ Start of Warp 4 ##################
layer {
	name: "zero_flow_5to4"
	type: "Eltwise"
	bottom: "scale_flow_5to4"
	top: "zero_flow_5to4"	
	eltwise_param {
		operation: SUM
		coeff: 0
	}
}

layer {
	name: "cat_flow_5to4"
	type: "Concat"
	bottom: "scale_flow_5to4"
	bottom: "zero_flow_5to4"
	top: "cat_flow_5to4"
}

layer {
	name: "warped_image4"
	type: "FlowWarp"
	bottom: "conv1_4_b"
	bottom: "cat_flow_5to4"
	top: "warped_image4"
	propagate_down: true
	propagate_down: false
} # warp 4

layer {
	name: "Correlation3"
	type: "Correlation1D"
	bottom: "conv0_4_b"
	bottom: "warped_image4"
	top: "Correlation3"
	correlation_param {
		pad: 4
		kernel_size: 1
		max_displacement: 4
		# single_direction: 1
		stride_1: 1
		stride_2: 1
	}
} # corr

# layer {
# 	name: "corr4"
# 	type: "ReLU"
# 	bottom: "Correlation3"
# 	top: "Correlation3"
# 	relu_param {
# 		negative_slope: 0.1
# 	}
# } # Relu corr

layer {
	name: "concat4"
	type: "Concat"
	bottom: "Correlation3"
	bottom: "conv0_4_b"
	bottom: "upsample_flow_5to4"
	bottom: "upsample_feature_5to4"
	top: "concat4"
	concat_param {
		axis: 1
	}
} # concat0 (corr conv0_42 upsample_flow_5to4 upsample_feature_5to4)

layer {
	name: "conv4_0"
	type: "Convolution"
	bottom: "concat4"
	top: "conv4_0"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 128
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Conv4_0 (concat0)

layer {
	name: "relu4_0"
	type: "ReLU"
	bottom: "conv4_0"
	top: "conv4_0"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv4_0

layer {
	name: "denseconcat4_0"
	type: "Concat"
	bottom: "conv4_0"
	bottom: "concat4"
	top: "denseconcat4_0"
	concat_param {
		axis: 1
	}
} # Concat1 concat0 & Conv4_0

layer {
	name: "conv4_1"
	type: "Convolution"
	bottom: "denseconcat4_0"
	top: "conv4_1"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 128
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Conv4_1 (concat1)

layer {
	name: "relu4_1"
	type: "ReLU"
	bottom: "conv4_1"
	top: "conv4_1"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv4_1

layer {
	name: "denseconcat4_1"
	type: "Concat"
	bottom: "conv4_1"
	bottom: "denseconcat4_0"
	top: "denseconcat4_1"
	concat_param {
		axis: 1
	}
} # Concat2 concat1 & Conv4_1

layer {
	name: "conv4_2"
	type: "Convolution"
	bottom: "denseconcat4_1"
	top: "conv4_2"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 96
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Conv4_2 (concat2)

layer {
	name: "relu4_2"
	type: "ReLU"
	bottom: "conv4_2"
	top: "conv4_2"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv4_2

layer {
	name: "denseconcat4_2"
	type: "Concat"
	bottom: "conv4_2"
	bottom: "denseconcat4_1"
	top: "denseconcat4_2"
	concat_param {
		axis: 1
	}
} # Concat3 concat2 & Conv4_2

layer {
	name: "conv4_3"
	type: "Convolution"
	bottom: "denseconcat4_2"
	top: "conv4_3"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 64
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Conv4_3 (concat2)

layer {
	name: "relu4_3"
	type: "ReLU"
	bottom: "conv4_3"
	top: "conv4_3"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv4_3

layer {
	name: "denseconcat4_3"
	type: "Concat"
	bottom: "conv4_3"
	bottom: "denseconcat4_2"
	top: "denseconcat4_3"
	concat_param {
		axis: 1
	}
} # Concat4 concat3 & Conv4_3

layer {
	name: "conv4_4"
	type: "Convolution"
	bottom: "denseconcat4_3"
	top: "conv4_4"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 32
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Conv4_4 (concat3)

layer {
	name: "relu4_4"
	type: "ReLU"
	bottom: "conv4_4"
	top: "conv4_4"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv4_4

layer {
	name: "denseconcat4_4"
	type: "Concat"
	bottom: "conv4_4"
	bottom: "denseconcat4_3"
	top: "denseconcat4_4"
	concat_param {
		axis: 1
	}
} # Concat5 concat4 & Conv4_4

layer {
	name: "predict_disp4"
	type: "Convolution"
	bottom: "denseconcat4_4"
	top: "predict_disp4"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 1
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
}  # Predict Disp 4

layer {
	name: "upsample_flow_4to3"
	type: "Deconvolution"
	bottom: "predict_disp4"
	top: "upsample_flow_4to3"
	param {
		lr_mult: 1
		decay_mult: 0
	}
	param {
		lr_mult: 0
		decay_mult: 0
	}
	convolution_param {
		num_output: 1
		pad: 1
		kernel_size: 4
		stride: 2
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # upsample_flow_4to3

layer {
	name: "upsample_feature_4to3"
	type: "Deconvolution"
	bottom: "denseconcat4_4"
	top: "upsample_feature_4to3"
	param {
		lr_mult: 1
		decay_mult: 0
	}
	param {
		lr_mult: 0
		decay_mult: 0
	}
	convolution_param {
		num_output: 4
		pad: 1
		kernel_size: 4
		stride: 2
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # upsample_feature_4to3

layer {
	name: "scale_flow_4to3"
	type: "Eltwise"
	bottom: "upsample_flow_4to3"
	top: "scale_flow_4to3"
	eltwise_param {
		operation: SUM
		coeff: 0.125
	}
} # scale_flow_4to3
################# End of Warp 4 ###################

################ Start of Warp 3 ##################
layer {
	name: "zero_flow_4to3"
	type: "Eltwise"
	bottom: "scale_flow_4to3"
	top: "zero_flow_4to3"  
	eltwise_param {
		operation: SUM
		coeff: 0
	}
}

layer {
	name: "cat_flow_4to3"
	type: "Concat"
	bottom: "scale_flow_4to3"
	bottom: "zero_flow_4to3"
	top: "cat_flow_4to3"
}

layer {
	name: "warped_image3"
	type: "FlowWarp"
	bottom: "conv1_3_b"
	bottom: "cat_flow_4to3"
	top: "warped_image3"
	propagate_down: true
	propagate_down: false
} # warp 3

layer {
	name: "Correlation4"
	type: "Correlation1D"
	bottom: "conv0_3_b"
	bottom: "warped_image3"
	top: "Correlation4"
	correlation_param {
		pad: 4
		kernel_size: 1
		max_displacement: 4
		# single_direction: -1
		stride_1: 1
		stride_2: 1
	}
} # corr

# layer {
# 	name: "corr3"
# 	type: "ReLU"
# 	bottom: "Correlation4"
# 	top: "Correlation4"
# 	relu_param {
# 		negative_slope: 0.1
# 	}
# } # Relu corr

layer {
	name: "concat3"
	type: "Concat"
	bottom: "Correlation4"
	bottom: "conv0_3_b"
	bottom: "upsample_flow_4to3"
	bottom: "upsample_feature_4to3"
	top: "concat3"
	concat_param {
		axis: 1
	}
} # concat0 (corr conv0_3_b upsample_flow_4to3 upsample_feature_4to3)

layer {
	name: "conv3_0"
	type: "Convolution"
	bottom: "concat3"
	top: "conv3_0"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 128
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # conv3_0 (concat0)

layer {
	name: "relu3_0"
	type: "ReLU"
	bottom: "conv3_0"
	top: "conv3_0"
	relu_param {
		negative_slope: 0.1
	}
} # Relu conv3_0

layer {
	name: "denseconcat3_0"
	type: "Concat"
	bottom: "conv3_0"
	bottom: "concat3"
	top: "denseconcat3_0"
	concat_param {
		axis: 1
	}
} # Concat1 concat0 & conv3_0

layer {
	name: "conv3_1"
	type: "Convolution"
	bottom: "denseconcat3_0"
	top: "conv3_1"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 128
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Conv3_1 (concat1)

layer {
	name: "relu3_1"
	type: "ReLU"
	bottom: "conv3_1"
	top: "conv3_1"
	relu_param {
		negative_slope: 0.1
	}
} # Relu conv3_1

layer {
	name: "denseconcat3_1"
	type: "Concat"
	bottom: "conv3_1"
	bottom: "denseconcat3_0"
	top: "denseconcat3_1"
	concat_param {
		axis: 1
	}
} # Concat2 conv3_1 & concat1

layer {
	name: "conv3_2"
	type: "Convolution"
	bottom: "denseconcat3_1"
	top: "conv3_2"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 96
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Conv3_2 (concat2)

layer {
	name: "relu3_2"
	type: "ReLU"
	bottom: "conv3_2"
	top: "conv3_2"
	relu_param {
		negative_slope: 0.1
	}
} # Relu conv3_2

layer {
	name: "denseconcat3_2"
	type: "Concat"
	bottom: "conv3_2"
	bottom: "denseconcat3_1"
	top: "denseconcat3_2"
	concat_param {
		axis: 1
	}
} # Concat3 concat2 & conv3_2

layer {
	name: "conv3_3"
	type: "Convolution"
	bottom: "denseconcat3_2"
	top: "conv3_3"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 64
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Conv3_3 (concat3)

layer {
	name: "relu3_3"
	type: "ReLU"
	bottom: "conv3_3"
	top: "conv3_3"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv3_3

layer {
	name: "denseconcat3_3"
	type: "Concat"
	bottom: "conv3_3"
	bottom: "denseconcat3_2"
	top: "denseconcat3_3"
	concat_param {
		axis: 1
	}
} # Concat4 concat3 & conv3_3

layer {
	name: "conv3_4"
	type: "Convolution"
	bottom: "denseconcat3_3"
	top: "conv3_4"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 32
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Conv3_4 (concat4)

layer {
	name: "relu3_4"
	type: "ReLU"
	bottom: "conv3_4"
	top: "conv3_4"
	relu_param {
		negative_slope: 0.1
	}
} # Relu Conv3_4

layer {
	name: "denseconcat3_4"
	type: "Concat"
	bottom: "conv3_4"
	bottom: "denseconcat3_3"
	top: "denseconcat3_4"
	concat_param {
		axis: 1
	}
} # Concat5 concat4 & conv3_4

layer {
	name: "predict_disp3"
	type: "Convolution"
	bottom: "denseconcat3_4"
	top: "predict_disp3"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 1
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Predict disp 3

layer {
	name: "upsample_flow_3to2"
	type: "Deconvolution"
	bottom: "predict_disp3"
	top: "upsample_flow_3to2"
	param {
		lr_mult: 1
		decay_mult: 0
	}
	param {
		lr_mult: 0
		decay_mult: 0
	}
	convolution_param {
		num_output: 1
		pad: 1
		kernel_size: 4
		stride: 2
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # upsample_flow_3to2

layer {
	name: "upsample_feature_3to2"
	type: "Deconvolution"
	bottom: "denseconcat3_4"
	top: "upsample_feature_3to2"
	param {
		lr_mult: 1
		decay_mult: 0
	}
	param {
		lr_mult: 0
		decay_mult: 0
	}
	convolution_param {
		num_output: 4
		pad: 1
		kernel_size: 4
		stride: 2
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # upsample_feature_3to2

layer {
	name: "scale_flow_3to2"
	type: "Eltwise"
	bottom: "upsample_flow_3to2"
	top: "scale_flow_3to2"
	eltwise_param {
		operation: SUM
		coeff: 0.25
	}
} # scale_flow_3to2 0.25
################# End of Warp 3 ###################

################ Start of Warp 2 ##################
layer {
	name: "zero_flow_3to2"
	type: "Scale"
	bottom: "scale_flow_3to2"
	top: "zero_flow_3to2"  
	param {
		lr_mult: 0  
	}
	scale_param {
		filler {
			type: "constant"
			value: 0
		}
	} 
	propagate_down: false
}

layer {
	name: "cat_flow_3to2"
	type: "Concat"
	bottom: "scale_flow_3to2"
	bottom: "zero_flow_3to2"
	top: "cat_flow_3to2"
}

layer {
	name: "warped_image2"
	type: "FlowWarp"
	bottom: "conv1_2_b"
	bottom: "cat_flow_3to2"
	top: "warped_image2"
	propagate_down: true
	propagate_down: false
} # warp 2

layer {
	name: "Correlation5"
	type: "Correlation1D"
	bottom: "conv0_2_b"
	bottom: "warped_image2"
	top: "Correlation5"
	correlation_param {
		pad: 4
		kernel_size: 1
		max_displacement: 4
		# single_direction: -1
		stride_1: 1
		stride_2: 1
	}
} # corr

# layer {
# 	name: "corr2"
# 	type: "ReLU"
# 	bottom: "Correlation5"
# 	top: "Correlation5"
# 	relu_param {
# 		negative_slope: 0.1
# 	}
# } # Relu corr

layer {
	name: "concat2"
	type: "Concat"
	bottom: "Correlation5"
	bottom: "conv0_2_b"
	bottom: "upsample_flow_3to2"
	bottom: "upsample_feature_3to2"
	top: "concat2"
	concat_param {
		axis: 1
	}
} # concat0 (corr conv0_2_b upsample_flow_3to2 upsample_feature_3to2)

layer {
	name: "conv2_0"
	type: "Convolution"
	bottom: "concat2"
	top: "conv2_0"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 128
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # conv2_0 (concat0)

layer {
	name: "relu2_0"
	type: "ReLU"
	bottom: "conv2_0"
	top: "conv2_0"
	relu_param {
		negative_slope: 0.1
	}
} # relu conv2_0

layer {
	name: "denseconcat2_0"
	type: "Concat"
	bottom: "conv2_0"
	bottom: "concat2"
	top: "denseconcat2_0"
	concat_param {
		axis: 1
	}
} # concat1 concat0 & conv2_0

layer {
	name: "conv2_1"
	type: "Convolution"
	bottom: "denseconcat2_0"
	top: "conv2_1"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 128
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # conv2_1 (concat1)

layer {
	name: "relu2_1"
	type: "ReLU"
	bottom: "conv2_1"
	top: "conv2_1"
	relu_param {
		negative_slope: 0.1
	}
} # relu conv2_1

layer {
	name: "denseconcat2_1"
	type: "Concat"
	bottom: "conv2_1"
	bottom: "denseconcat2_0"
	top: "denseconcat2_1"
	concat_param {
		axis: 1
	}
} # concat2 concat1 & conv2_1

layer {
	name: "conv2_2"
	type: "Convolution"
	bottom: "denseconcat2_1"
	top: "conv2_2"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 96
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # conv2_2 (concat2)

layer {
	name: "relu2_2"
	type: "ReLU"
	bottom: "conv2_2"
	top: "conv2_2"
	relu_param {
		negative_slope: 0.1
	}
} # relu conv2_2

layer {
	name: "denseconcat2_2"
	type: "Concat"
	bottom: "conv2_2"
	bottom: "denseconcat2_1"
	top: "denseconcat2_2"
	concat_param {
		axis: 1
	}
} # concat3 concat2 & conv2_2

layer {
	name: "conv2_3"
	type: "Convolution"
	bottom: "denseconcat2_2"
	top: "conv2_3"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 64
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # conv2_3 (concat3)

layer {
	name: "relu2_3"
	type: "ReLU"
	bottom: "conv2_3"
	top: "conv2_3"
	relu_param {
		negative_slope: 0.1
	}
} # relu conv2_3

layer {
	name: "denseconcat2_3"
	type: "Concat"
	bottom: "conv2_3"
	bottom: "denseconcat2_2"
	top: "denseconcat2_3"
	concat_param {
		axis: 1
	}
} # concat4 concat3 & conv2_3

layer {
	name: "conv2_4"
	type: "Convolution"
	bottom: "denseconcat2_3"
	top: "conv2_4"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 32
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # conv2_4 (concat4)

layer {
	name: "relu2_4"
	type: "ReLU"
	bottom: "conv2_4"
	top: "conv2_4"
	relu_param {
		negative_slope: 0.1
	}
} # relu conv2_4

layer {
	name: "denseconcat2_4"
	type: "Concat"
	bottom: "conv2_4"
	bottom: "denseconcat2_3"
	top: "denseconcat2_4"
	concat_param {
		axis: 1
	}
} # concat5 concat4 & conv2_4

layer {
	name: "predict_disp_ini"
	type: "Convolution"
	bottom: "denseconcat2_4"
	top: "predict_disp_ini"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 1
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
} # Predict disp 2
################# End of Warp 2 ###################

layer {
	name: "dc_conv1"
	type: "Convolution"
	bottom: "denseconcat2_4"
	top: "dc_conv1"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 128
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
}
layer {
	name: "relu_dc1"
	type: "ReLU"
	bottom: "dc_conv1"
	top: "dc_conv1"
	relu_param {
		negative_slope: 0.1
	}
}
layer {
	name: "dc_conv2"
	type: "Convolution"
	bottom: "dc_conv1"
	top: "dc_conv2"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 128
		pad: 2
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		dilation: 2
	}
}
layer {
	name: "relu_dc2"
	type: "ReLU"
	bottom: "dc_conv2"
	top: "dc_conv2"
	relu_param {
		negative_slope: 0.1
	}
}
layer {
	name: "dc_conv3"
	type: "Convolution"
	bottom: "dc_conv2"
	top: "dc_conv3"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 128
		pad: 4
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		dilation: 4
	}
}
layer {
	name: "relu_dc3"
	type: "ReLU"
	bottom: "dc_conv3"
	top: "dc_conv3"
	relu_param {
		negative_slope: 0.1
	}
}
layer {
	name: "dc_conv4"
	type: "Convolution"
	bottom: "dc_conv3"
	top: "dc_conv4"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 96
		pad: 8
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		dilation: 8
	}
}
layer {
	name: "relu_dc4"
	type: "ReLU"
	bottom: "dc_conv4"
	top: "dc_conv4"
	relu_param {
		negative_slope: 0.1
	}
}
layer {
	name: "dc_conv5"
	type: "Convolution"
	bottom: "dc_conv4"
	top: "dc_conv5"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 64
		pad: 16
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		dilation: 16
	}
}
layer {
	name: "relu_dc5"
	type: "ReLU"
	bottom: "dc_conv5"
	top: "dc_conv5"
	relu_param {
		negative_slope: 0.1
	}
}
layer {
	name: "dc_conv6"
	type: "Convolution"
	bottom: "dc_conv5"
	top: "dc_conv6"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 32
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
}
layer {
	name: "relu_dc6"
	type: "ReLU"
	bottom: "dc_conv6"
	top: "dc_conv6"
	relu_param {
		negative_slope: 0.1
	}
}

layer {
	name: "predict_disp_inc"
	type: "Convolution"
	bottom: "dc_conv6"
	top: "predict_disp_inc"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 1
		decay_mult: 0
	}
	convolution_param {
		num_output: 1
		pad: 1
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_filler {
			type: "constant"
		}
		engine: CUDNN
	}
}

layer {
	name: "predict_disp2"
	type: "Eltwise"
	bottom: "predict_disp_ini"
	bottom: "predict_disp_inc"
	top: "predict_disp2"
	eltwise_param {
		operation: SUM
	}
}


################ Start of Warp 1 ##################
################# End of Warp 1 ###################


################ Start of Warp 0 ##################
################# End of Warp 0 ###################

##################### LOSS 0 ######################
###################################################

##################### LOSS 1 ######################
###################################################

##################### LOSS 2 ######################
layer {
	name: "downsample_disp_gt2"
	type: "Downsample"
	bottom: "disp_gt_aug"
	bottom: "predict_disp2"
	top: "downsample_disp_gt2"
	propagate_down: false
	propagate_down: false
}

layer {
	name: "loss2"
	type: "L1Loss"
	bottom: "predict_disp2"
	bottom: "downsample_disp_gt2"
	top: "loss2"
	loss_weight: 1
	l1_loss_param {
		l2_per_location: false
		normalize_by_num_entries: true
	}
}
###################################################

##################### LOSS 3 ######################
layer {
	name: "downsample_disp_gt3"
	type: "Downsample"
	bottom: "disp_gt_aug"
	bottom: "predict_disp3"
	top: "downsample_disp_gt3"
	propagate_down: false
	propagate_down: false
}

layer {
	name: "loss3"
	type: "L1Loss"
	bottom: "predict_disp3"
	bottom: "downsample_disp_gt3"
	top: "loss3"
	loss_weight: 0.2
	l1_loss_param {
		l2_per_location: false
		normalize_by_num_entries: true
	}
}
###################################################

##################### LOSS 4 ######################
layer {
	name: "downsample_disp_gt4"
	type: "Downsample"
	bottom: "disp_gt_aug"
	bottom: "predict_disp4"
	top: "downsample_disp_gt4"
	propagate_down: false
	propagate_down: false
}

layer {
	name: "loss4"
	type: "L1Loss"
	bottom: "predict_disp4"
	bottom: "downsample_disp_gt4"
	top: "loss4"
	loss_weight: 0.2
	l1_loss_param {
		l2_per_location: false
		normalize_by_num_entries: true
	}
}
###################################################

##################### LOSS 5 ######################
layer {
	name: "downsample_disp_gt5"
	type: "Downsample"
	bottom: "disp_gt_aug"
	bottom: "predict_disp5"
	top: "downsample_disp_gt5"
	propagate_down: false
	propagate_down: false
}

layer {
	name: "loss5"
	type: "L1Loss"
	bottom: "predict_disp5"
	bottom: "downsample_disp_gt5"
	top: "loss5"
	loss_weight: 0.2
	l1_loss_param {
		l2_per_location: false
		normalize_by_num_entries: true
	}
}
###################################################

##################### LOSS 6 ######################
layer {
	name: "downsample_disp_gt6"
	type: "Downsample"
	bottom: "disp_gt_aug"
	bottom: "predict_disp6"
	top: "downsample_disp_gt6"
	propagate_down: false
	propagate_down: false
}

layer {
	name: "loss6"
	type: "L1Loss"
	bottom: "predict_disp6"
	bottom: "downsample_disp_gt6"
	top: "loss6"
	loss_weight: 0.2
	l1_loss_param {
		l2_per_location: false
		normalize_by_num_entries: true
	}
}
###################################################

layer {
	name: "Silence0"
	type: "Silence"
	bottom: "img0"
}

layer {
	name: "Silence1"
	type: "Silence"
	bottom: "img1"
}

layer {
	name: "Silence2"
	type: "Silence"
	bottom: "disp_gt"
}

layer {
	name: "Silence3"
	type: "Silence"
	bottom: "dummy_disp"
}

layer {
	name: "Silence4"
	type: "Silence"
	bottom: "disp_slice"
}
